import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Objects;

// Author - Parth Zanwar
// Class - Computer Science 2 K
// Project - Sliding tiles
// Description - This is a fun game where you slide around the tiles in order to complete the image
public class Puzzle extends JFrame {

    private int size = 2; // Default size
    private int whiteI; // the white square row number
    private int whiteJ; // the white square column number

    private BufferedImage image = null; // the current image
    private String filename = "Sreeshan.jpg"; // the name of the image file
    private JPanel sliderPanel; // the panel in which the tiles are held
    private JPanel topPanel; // The top Panel which holds the options to change the size and the image
    private JButton[][] userGrid; // The grid of buttons displayed to the user
    private int[][] referenceOrder; // Order of which original image was generated in
    private int[][] userOrder; // Order of the current grid
    private JComboBox<String> sizeSelector; // Combo Box to select a size
    private JComboBox<String> imageSelector; // Combo Box to Select an image
    private JButton scramble; // Button to scramble the puzzle again

    // Constructor to set up the game frame
    public Puzzle() {
        try {
            image = ImageIO.read(new File(filename));
            initGUI();
            setTitle("Slider Game");
            setVisible(true);
            setResizable(false);
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            setLocationRelativeTo(null);
            pack();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "The image file " + filename + " could not be opened");
        }
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(Puzzle::new);
    }

    // Method that calls other methods to set up the game
    private void initGUI() throws IOException {
        // Set up layout
        getContentPane().setLayout(new BorderLayout());
        image = ImageIO.read(new File(filename));

        // Create the top panel
        createTopPanel();
        getContentPane().add(topPanel, BorderLayout.NORTH);

        // Create the scramble button
        scramble = new JButton("SCRAMBLE!!!");
        createScrambleButton();
        getContentPane().add(scramble, BorderLayout.SOUTH);

        // Initialize the slider panel
        sliderPanel = new JPanel();
        createSliderPanels();
        getContentPane().add(sliderPanel, BorderLayout.CENTER);


    }

    // Method to create slider Panels
    private void createSliderPanels() throws IOException {
        // Clear the previous panel
        sliderPanel.removeAll();

        // Set up grid layout for the new size
        sliderPanel.setLayout(new GridLayout(size, size));

        // Calculate the tile size based on the smaller dimension of the image
        int sideSize = Math.min(image.getWidth(), image.getHeight());
        int tileSize = sideSize / size;

        // Initializes grids with respective objects
        userGrid = new JButton[size][size];
        referenceOrder = new int[size][size];
        userOrder = new int[size][size];

        // counter increments in each iteration to help determine the proper placement for the win condition
        int counter = 0;

        // Populate the grid with buttons and images
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                BufferedImage subImage;
                if (i == size - 1 && j == size - 1) {
                    // Create a blank sub-image for the white space
                    subImage = new BufferedImage(tileSize, tileSize, BufferedImage.TYPE_INT_ARGB);
                    whiteI = i;
                    whiteJ = j;
                } else {
                    // Extract sub-image for the current grid cell
                    subImage = image.getSubimage(j * tileSize, i * tileSize, tileSize, tileSize);
                }

                // Puts the respective button into the grid
                userGrid[i][j] = new JButton(new ImageIcon(subImage));
                userGrid[i][j].setFocusPainted(false);
                userGrid[i][j].setBorder(null);

                // Adds an action listener to the button in the matrix
                int finalI = i;
                int finalJ = j;
                userGrid[i][j].addActionListener(ae -> {
                    try {
                        buttonClicked(finalI, finalJ);
                    } catch (IOException e) {
                        throw new RuntimeException(e);
                    }
                });
                sliderPanel.add(userGrid[i][j]);

                // Puts the location of the variable in the integer matrices
                referenceOrder[i][j] = counter;
                userOrder[i][j] = counter++;
            }
        }

        // Calls other methods to set up the game
        randomizeSlides();
        revalidate();
        repaint();
    }

    // Action listener for each button in the matrix
    private void buttonClicked(int row, int col) throws IOException {
        // Check if the clicked button is adjacent to the white space
        if ((Math.abs(row - whiteI) == 1 && col == whiteJ) || (Math.abs(col - whiteJ) == 1 && row == whiteI)) {
            swap(row, col, whiteI, whiteJ, true); // swaps tiles if true
        }
    }

    private boolean inBounds(int row, int column) {
        return row >= 0 && row < size && column >= 0 && column < size;
    }

    // Swap method to swap tiles to new location
    private void swap(int fromRow, int fromCol, int toRow, int toCol, boolean checkWin) throws IOException {
        // Swap icons between the buttons
        Icon temp = userGrid[fromRow][fromCol].getIcon();
        userGrid[fromRow][fromCol].setIcon(userGrid[toRow][toCol].getIcon());
        userGrid[toRow][toCol].setIcon(temp);

        //Swap the numbers
        int holder = userOrder[fromRow][fromCol];
        userOrder[fromRow][fromCol] = userOrder[toRow][toCol];
        userOrder[toRow][toCol] = holder;

        // Update the white space position
        whiteI = fromRow;
        whiteJ = fromCol;

        // Checks if method should check win
        if (checkWin) {
            if (win()) { // checks if win condition is met
                // Slots in missing piece
                userGrid[size - 1][size - 1].setIcon((new ImageIcon((image.getSubimage((size - 1) * Math.min(image.getHeight(), image.getWidth()) / size, (size - 1) * Math.min(image.getHeight(), image.getWidth()) / size, Math.min(image.getHeight(), image.getWidth()) / size, Math.min(image.getHeight(), image.getWidth()) / size)))));
                // Repaints the slides
                repaint();
                // Displays message on the screen
                JOptionPane.showMessageDialog(null, "YOU WIN!");
                int response = JOptionPane.showConfirmDialog(null, "Play Again?", "Play Again?", JOptionPane.YES_NO_OPTION);
                if (response == JOptionPane.YES_OPTION) {
                    createSliderPanels();
                } else if (response == JOptionPane.NO_OPTION) {
                    dispose();
                }
            }
        }
    }



    private void randomizeSlides() throws IOException {
        // Number of random moves to make
        int randomMoves = size * size * 10; // Arbitrarily chosen; adjust as needed

        for (int i = 0; i < randomMoves; i++) {
            // Get the valid neighbors of the white tile
            ArrayList<int[]> neighbors = getAdjacentTiles(whiteI, whiteJ);

            // Randomly pick one of the neighbors
            int[] randomNeighbor = neighbors.get((int) (Math.random() * neighbors.size()));

            // Swap the white tile with the selected neighbor
            swap(randomNeighbor[0], randomNeighbor[1], whiteI, whiteJ, false);

            // Update the white tile's position
            whi¿ı$Å‘g8Æzªù4wMü'¸BìOµ¯ôØ\ïí∞“•≤eábœ™Ì#Ü«œôã&„”;b∏x“1·îáä·e1€ÃØd2‹|Ÿ⁄C1åm+Œ‹Ó¿ ˆˇ µÀcÆjm‹ë€i∫$ó™ctó1^‹»†≈è1TâÂ`™¡√‰™Ç|õT’ß’°’¢ãOXûoô'á&)’ùúª A‹§Ö)A!â9‹J7–Q¶§‘ö“ÀÚFììPÂO]6sÙíÍZjÃØñ±HÒÑ»VBAå≤lpK6?√ªõöuåwÌixØ,o5≥y~[∫Fc¬ßê§çÏ¸πŒ?ÑgnK4Îÿ°ö⁄c˚ÎD)+§–oIÆ∑‡ú`H8z≠iƒz\óqI∑æœo∞≈¡›‚V‰ª§|∞'ì˜IÕzéÍ6ä8UπØ#_R÷õN≥¥h„í9%+,≠òU@‡:wp1œPXw¨}OƒÅ¥˚Ì´hË±¨r™"ÃàÕ¥‰©%ÜdMŸ¡«nj¨∫Ù¨≥ ∂˜˜î¨ﬂ79iÅ%Hlœ›Ï6úE±Y-&∑*˜:ß¸ªCn[Ã∆∆¬0Sàûr8•
I|Hs®˛…{Y’'’4¡fÛM∑dr%ºÚoW!8⁄®ÿ˘∫e±…ùyum4÷∂)5¥ç+:⁄⁄⁄ÓmÃ	âLõÛ)®h ;„åN∆Ã…ùÂ√|»yá8a«ﬂ'èîzåé@©-°ÍÏ>ŒX3	ÄeGÖt›ëÄPúı∫5v$£¢8€r‘◊Œó<zãZñöf∫F3ÕH<∂˜ckbUhœﬁËw¸≠˝Ôv”<?o§[ã;+˚{´ü4$Mk"Ñ∫eÑ…í'ÓƒsÀ(`[n—ïÊBx^E¢ô¨„2Iu5˝ÉŸ´G$S‚±_∫á 0·¿`q]¸ i&°˚I„çÑ«Ê|9ÛH‰|°„Óçõà›π´∆≈TîŸÍaÈ®¢ˆ≠®ãm.‚“˛‹YŸÆÀ®nï≈´†ê*“p_x‹ªA√)»`+ö∑æõTµHÁ3Oãﬂ`bíl+Û"»‡3`ñ ‡ååéNï‚Œ≥Õo=¸wV◊8yeéŸ#)Û p	èG8„«›xö∂Kh◊8ç∂√m ÁÿXÿÌ˘À*cÉΩ∞AÎÕNVGLÂgvcﬁX√`∑6tÚj÷óQÔä)ƒ"YÄ⁄¶L˝ÁL+tSºé≠Y:_ÓlmÓ‚f/Ó>b f?) ™VER <Éé~ﬁÚU∫Ò¿…ÀÄ∂˜#YS2ç∆7 Çù6≥{'◊Mi¥›B8‰àYb2®àynrCÅø∫''° ˙—⁄Õût∑–”’£:ÑÀÇ·Z?-&öAàî31À)˘Å 0Ä¿P ‚∫è√k%üˆåÒ‚kµiL«|d„'ñ\±‡Ú3Ô\¥˙µ∂ìys%≠≥-ù‰≠àfyáëèó˚£~wÁª €Ot◊lz2B“ÃñÇpêF“,œ∏+	R<¡Çˇ 1ŒFzcó≤F¥Ï€g7¨BñpI í0í6‡Æ	hˇ Ÿœæ{Ò\÷†ñó∂M-Ù†&Lq«*ÓJê´”Écøq€uhxÉuƒ…mqÛ\m˛\§l$B·Ä<Ç£ c©œ:√µΩçº≥º–àƒi¥àê%|?ó ,$¢≤Ái ;‡ÙRéãSö´‘÷“Ó&π∏öy$2M2‰D˚ë£·óìì¥z{uZñ÷kÀÖM÷Qßæ–Ê-ÏX‡U‡|›IˆÔSYÈÛ¡ß¿Ø!äkΩŒ-‰ë#î!˚èÄq¥ç£ π\cåör».¨Ó#˚rF≤r§†óÃVÍy!ı7ª–—+-G^\Dí	V[k¶3G$Õh»0W8Uls¥ºgÆFq⁄°Ií~Ào}ú≤@ç±âGP§d`».=˛F•≤±1ÿâ“÷÷UP$è#tdù•Ü~RH<}+A¸ÿÏ&∂39QJÉÇíUûç˜àıM•†YΩL˘+ÿﬁ<"¬ﬂ#,åT >Ë¿1LÕæ2¢	1ÌbÃr∏bŸÔ«ˇ ûKk¥2¬ë©]¨b®ù‡tÍ∏´øfé÷CÀr€‰ëá9 ÉéòÎÌä.í'óòÖUÆ?p•wH€U§P…¬≥`d`œcö.¨€RRÆ™ç4 ﬁ\†⁄F”∆OlcæÙŸ§ämÒ·%y»¡ŒC®Â≥ﬂŒ}´†–¸?k©Õı[•ïïîÇ≈Ä˘r§äA«=œÒÑÍ*kôùT®∫⁄#õæ—æ’1∏ÿ◊[f
◊M)Û◊	ÄªOQÜ_˚Í∂dUìI≤òJY¥ˆé'U€ô-êDbzî›¡¡¸1]4û≤Ü∆ÌÌkâÕ‘>]¬¸¶?òÛè‚
[=˛È‰ı™˙∂û∂∑Eö[[”˜–ÛC∏\∂s˝Ò\ˇ ZS≤GK¡8]≥î’¨dåMu2˘ ±Ïç»—*„jqŒr„'9ˆ¿•5úë‹HI˛t±+H4ç.π<‰|ò˙‚∫´k}4Hﬂlû|º`çŒve3ÜŒÓÄY—⁄≈¶[Ò∏gí9.„vÊ7W}æW»2£w O9‹sÿÙF£±À*:îlÌ‰iœŸ»72√˘dèLcÍM-åc…àG∫h∑ôc;_ì»?\ú{˚—}´>õyªÂ:‡ng«Óÿí£vs¥ÅıœNÇWìÏ˜meìñπé6‰n*HÁ<Áµ•›Æe ÆWèOèÀ∏˘ëG˛∂·£?ºe6êÑHˇ ÅVq“”ÏÌmóƒ·„ñxd¬ÃÖ∑ltı .=Û][…yäå®r#Qí‡>{g'Ø•f«fV8õÀák1â$X±`0Ö[àÎ‘sUûbï-6O2gìl&I	H¸ªÅÜ+åÔ¸^=´>i·µÇ÷%p∂ª\§éÅQTìÅ∑ø;π˜´ ùJOõs∞*;Nπ˘ûN‚8®$ñkÖ"	?x!fI%åÃ Ù'±5¨LdÖC$vpMI#0+^Wó;)$yã:Ó‹8;qú[∏ˆ§≥¨ÎŒ˜`U‹7 F;F1é1∏‰ï∑}xçu˜n›⁄Y&êïUåÜ#kÁ ng;G_,À«õNû¬,†¥s:€«üï‹T‰6>lmúw7pj¢Ã‰ªDy(ëòm¨rÎˆ_ﬁÀ#*ÌÛ	Œ“2Ω∫n5-öõU∏æB—¿¯Ä"õyÁ*Ñs¯·©…9∏é{∏[îîZ7õoHõNq≥Á^	9¸)∂ˆÌ˚õ;kÅa–ª|Õ∑JØ†Ós˝·A(æÃTÅˆi-ìÔ:Ö$∆8Q»9ÒÕ57[«Ã“»·ˇ ’ïfgb3◊8˜ËqQÕ®∂¥Xof∑X`d>tjÚÃÀ¿À∑›Î€∂*x!XÓD,¢`°•e√62Ø€úÙ©±zø¥!ÜEIú∆Ã0rÅrOF„Åœ8ÊïcÇƒïàôr˘»∏Œ7¸X<˚Ê´$≠nÛ%•™Ck#è2'ïö;áBJHŸ˚ªw6LÛﬁûÀ≤¬iº÷Ñ+JÃ∏IT∂>R:Jx∆{‚ã…Ô.†∂≥üÕl∆F¬vê0ñˆı§∑Ä‹-¥·vGrCFÃ»F›≈á#'oøJ"’-¨Ó†gù“{ûWƒ∆æ¯ÀûpNy®µE˛–›Åc‹bïqñb∏==I g∞µÿ<∆€ÕŸ◊d4™æc•…»öRU∂çºmåíqÉπBíﬂQ˝ö‡M<∑+	ö‚@%xOÓ⁄5oñGÙ<ÒŒjÂ≈òºæ-nøgùÆ‚IôxåFÎêÔ¥pkÁwéj)£dç≠Ó£Eùèù6“Ë!…ŒÁ;~È>ßr{”∏¨Uòy≥œ*(‹Ã0≤1_3 ¸¨√êsí	„åw´R^ÜóÀUÜﬂ™*Ñ˘Ü‚Ndı«ÂU/¢íEÛ˘â 1˘ëÕ∑–˚éOºsöd”,p∆^Fùc˘ÿˆ»Wnœ\ˇ ú’Z‰ﬁ≈ã˚…!X§)ÂC‹≈UP‹ç›â'>¯ÔRD°£ëï6,˚\±*∏œ;è>˝3∆qTV8ˇ µäîY§h√2NZŒ#sõ Ä:˜ÎVnï&æñ“ﬁ ë†EkkwÃ∆w(‡`û‹‰Q‰?2ıª(â‚êEÂ›8[ê™¿c ås¥ÄŸÁ•@,ÊÇ	/.eÕ#∞∏ªf%$ê±Á,*@ŒÏcúêióê¡%ª8∂W2ynq∑í	È¥3}Ó>oL“ç>‚∆ﬁÕ3Ê@X¥@≥&Hñ?`SÂ#–˙ìRP¯ñ—Æ"≥∫”£í)W",ïÉ;ª≤ï$˛´ˆZî“Nﬂi˘|ë'€'∑géL†tà3üò´q–öÃKT∏X⁄“O*=≈Y„  
ˇ xr?Ô™Ü„OûKehnÑ≠<Üëî∆€äÜågúí˘SË}M;yä˛EÕ£MQæhﬁUP©#)dä%˘w|‹8ò®>’æ˘Y_Ê◊s,y#óoî˙ëËE/<Õ*˘oqx“§kn`"ﬂt"Ï˚ÄåÒ”4…¥â°”Y£2D!}±¡ÖVEs¸O€ñ«ÄÙßßRuËIkv
ºÒ≈ ìÊŒåË0zÒÛTíL∂Qª¬MÊ§K”Ûé†8„;@<sP›+_…qvío)å»Øµ$e˘\ù	…Á∏®aê$è-£_«4ß,—\RGÁ>¥Ìp‘∏∞òÖ√.Âî∞-Ê`˘ß'$ÌÎQB∑€ ¿≠ªíŒŸ+Ç
c+œLdÙ›öé·d‘!ûx†k†±®>PÃèó€∑N2I=≥VdH‚í„ÏG»∞x]y‹o3´c8#˝ëHeöˆ)¨:l Ã°ã4[ë¢
úê3ûß⁄¥‰ÅuDà:LΩ¿êÊ0 Ã#Ô:Ö‹‹3’óºvv·YÀieÇD⁄9bAM≈èL˘@…ÿ„ö[{WµWùcXúƒl%Û¡I /~
éæÑöMˆö8ÓÆ,c∂⁄è«îÃæRÌ‹>’aÇÁ8ÍO>åµﬁ÷™DsAÁnïbe˘§a«ôì›T6‡Â™‹ç#B'Wå¢≥è40⁄`ïuF˜p√LG,í$ôgWaô#åÅ&1µdÓ©ŒÉÅøÕf∂.¡$%'D¢IÄéHÌ‘æıÁl˚∑83«zlsÄÓ<ÇÔ‹7åÄ:˛=ø≠Aˆè9„πâR/Ã£Êg=˙úsI—∆ÅI„∞>dÑ l˙öª–≥∂ I?w‘†9Rß9'r®∆z‰„ßZ[}=R"ñ3Ã1D	rˇ ¬Á¡sYØÃkºJ≤‹+â|º∞î`ÁÇI‰ÅﬂÂ´&SqˆkÕ?Œ∑¥ñIDí‹`J¯aÚpTpzÁ>Ù[ÃÚ£[Ü∏ÖY¡Ω|Ú8¿7r:/CŒ9¡®`∫>LW-¿6Ï0Œπçˆ.‹«,=I¿$ö'åÀ1!çHrß?)»¸èç:GHc‹ﬁ\√¡!2ªT|´˘b®õçiv,∑πªèÀnx\:ù‰};ÉüΩÅ◊7v≈oqèµ»“d;ˆÇO…$÷{ÈÛ]}ë ∆!ù	HD<∂Ê«9¬ê?ﬁ¸¨… äVC:≤H©=∆<√ú‡ˇ («Ê)1°dW›=√N L!h‘>¸rW$”?«Nígé?›Õ0‹©ÊßóyÄÚ†±ËFO^?:ÉÌõ#$é'd4ùº‡ÁØCäõÂ∑rÉ˜.Xï2∂|—‹©ÔÅä¶Ñˇ jª±TXÆ#åU>Œæ[zÅ∆yÌ¡Îﬁ´X∑€nV9Áe0≥1Ûú2Œ	ÈÙ=≥WZ2®Y~œπOôÖ¥‰c#®‡{ıÈL∏Wí%D∂WÅAƒlb7I'Îûïù√R¥”≈§≤?˙8r´πF—^{ˇ üj“Yn¥©ÉIÊ]]√j≥≠±h‚u∞76“qµI qÉﬁ≥∂‹ŸÔ‘YÑ∆ôá$0$n¬é ‰Ò…Ù¶√k∂Õû[ﬂ%Ó§ieéP•^SúÜ üôÜ·ﬁûç\ûﬁ[-<…º«ÿbä/#b∑˜ﬂøÒ«¯AÙ•Öd|Fñå“d+2Ì
@$Û◊9ı5ö∞hmHmº°2Óyä®+»
Xzså{˝jÏãÿπ≥+∏d>PÍ%é—ŸAêËZõ%2Xnw6îé“Z).Z8ÂN7yõ0¿úa≤O~x˚‘ë´,	Úè"ôŸºÃÜ*ÿ'€¯GN{Ê°\‡≠¨Af3`™.ﬁ£úÒÿí{‘≤#€˝âÑ!‡é †Ã™ŸÓ[Æ}ΩΩËñÙıvñD[x„µêÂ∆‰ÜëwœL+¶Ï˜ßC<r<e~H§VgHe#Óåt¿ÁÛ™ÀÕ#óò[« ÛB Ï8Qœn:„åTÓ¶ÍI6¬®nxÚXe¡Œ@|√ìÉûµsE-	ïpSœHÊl˘Ø≤≥Ä~Ω~µsFæ∑≥≥”‰í˙÷Œ˝di-◊ôúa|¶çyÚ⁄2GÕÚï=McﬂéßóÀhÿ/ôt/ g dN1äà›L∂Ó¬f∑öË®o)¬≥íÆFyU$coO∆ó'2dùœ@õƒlxÇ "
A\πEœAª¶8…#®£PñÕ„ªé⁄DºWq#∆ÆF%⁄1èRßåé8Ø=YÊkÑç•à$iê †ºçìÉ« Áà´VçºrHªÄ∑@sûëêp99